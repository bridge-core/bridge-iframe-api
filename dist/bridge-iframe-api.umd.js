(function(n,o){typeof exports=="object"&&typeof module!="undefined"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(n=typeof globalThis!="undefined"?globalThis:n||self,o(n.BridgeIframeAPI={}))})(this,function(n){"use strict";function o(e,r,i=window.top){if(!i)throw new Error("A trigger target is required");const t=crypto.randomUUID();return i.postMessage({type:e,uuid:t,origin:window.origin,payload:r}),new Promise((d,u)=>{const s=p=>{const{type:l,uuid:w,error:g,payload:c}=p.data;if(!(l!=="response"||w!==t)){if(g){u(g);return}globalThis.removeEventListener("message",s),d(c)}};globalThis.addEventListener("message",s)})}function a(e,r,i=window.top){if(e==="response")throw new Error("The response event type is reserved for internal use.");globalThis.addEventListener("message",t=>{const{type:d,origin:u,uuid:s,payload:p}=t.data;d===e&&r(p,u,f(s,i))})}function f(e,r=window.top){if(!r)throw new Error("A response target is required");return i=>{r.postMessage({type:"response",uuid:e,origin:window.origin,payload:i})}}a("openWithFile",(e,r,i)=>{i(e)}),n.on=a,n.trigger=o,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
